import{_ as e}from"./_plugin-vue_export-helper.cdc0426e.js";import{o,c as t,a}from"./app.41fc9acb.js";const d={},r=a(`<h1 id="调试时的事件" tabindex="-1"><a class="header-anchor" href="#调试时的事件" aria-hidden="true">#</a> 调试时的事件</h1><p>接口调试时分别触发<code>before</code>请求发起前事件，与<code>after</code>请求响应后事件。</p><p>可通过接口的注解来定义执行的事件，如下：</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token doc-comment comment">/**
 * @Apidoc\\Title (&quot;调试时事件&quot;)
 * @Apidoc\\Url(&quot;/admin/demo/debug&quot;)
 * @Apidoc\\Method(&quot;POST&quot;)
 * @Apidoc\\Param(&quot;username&quot;,type=&quot;string&quot;,desc=&quot;用户名&quot;)
 * @Apidoc\\Param(&quot;password&quot;,type=&quot;string&quot;,desc=&quot;密码&quot;)
 * @Apidoc\\Before(event=&quot;setBody&quot;,key=&quot;password&quot;,handleValue=&quot;md5&quot;,value=&quot;body.password&quot;)
 * @Apidoc\\After(event=&quot;setGlobalHeader&quot;,key=&quot;Authorization&quot;,value=&quot;res.data.token&quot;,desc=&quot;用户登录Toekn&quot;)
 */</span>
<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">debug</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Request</span> <span class="token variable">$request</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">//...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以上例子中，会执行以下事件：</p><p>1、请求发起前，将请求参数<code>password</code>进行md5。</p><p>2、请求响应后，设置一个全局请求头参数<code>Authorization</code>，参数值为响应结果中返回数据中的<code>data.token</code>。</p><h2 id="before-after注解的参数" tabindex="-1"><a class="header-anchor" href="#before-after注解的参数" aria-hidden="true">#</a> Before|After注解的参数</h2><table><thead><tr><th>参数名</th><th>说明</th></tr></thead><tbody><tr><td>event</td><td>事件名</td></tr><tr><td>key</td><td>字段名</td></tr><tr><td>value</td><td>字段值，可直接设置值，或以<code>query.xxx</code>、<code>body.xxx</code>取请求参数中的值；以<code>res.xxx</code>取请求响应结果中的参数</td></tr><tr><td>desc</td><td>字段描述</td></tr><tr><td>url</td><td>event为ajax时，定义请求地址</td></tr><tr><td>method</td><td>event为ajax时，定义请求类型</td></tr><tr><td>contentType</td><td>event为ajax时，定义contentType</td></tr></tbody></table><h2 id="事件说明" tabindex="-1"><a class="header-anchor" href="#事件说明" aria-hidden="true">#</a> 事件说明</h2><h3 id="setheader" tabindex="-1"><a class="header-anchor" href="#setheader" aria-hidden="true">#</a> setHeader</h3><blockquote><p><code>before</code>请求发起前有效</p></blockquote><p>设置一个请求头参数</p><p><code>@Apidoc\\Before(event=&quot;setHeader&quot;,key=&quot;参数名&quot;,value=&quot;参数值&quot;)</code></p><h3 id="setquery" tabindex="-1"><a class="header-anchor" href="#setquery" aria-hidden="true">#</a> setQuery</h3><blockquote><p><code>before</code>请求发起前有效</p></blockquote><p>设置一个请求Query参数</p><p><code>@Apidoc\\Before(event=&quot;setQuery&quot;,key=&quot;参数名&quot;,value=&quot;参数值&quot;)</code></p><h3 id="setbody" tabindex="-1"><a class="header-anchor" href="#setbody" aria-hidden="true">#</a> setBody</h3><blockquote><p><code>before</code>请求发起前有效</p></blockquote><p>设置一个请求参数</p><p><code>@Apidoc\\Before(event=&quot;setBody&quot;,key=&quot;参数名&quot;,value=&quot;参数值&quot;)</code></p><h3 id="clearheader" tabindex="-1"><a class="header-anchor" href="#clearheader" aria-hidden="true">#</a> clearHeader</h3><p>清除一个请求头参数</p><p><code>@Apidoc\\Before(event=&quot;clearHeader&quot;,key=&quot;参数名&quot;)</code></p><h3 id="clearquery" tabindex="-1"><a class="header-anchor" href="#clearquery" aria-hidden="true">#</a> clearQuery</h3><p>清除一个请求Query参数</p><p><code>@Apidoc\\Before(event=&quot;clearQuery&quot;,key=&quot;参数名&quot;)</code></p><h3 id="clearbody" tabindex="-1"><a class="header-anchor" href="#clearbody" aria-hidden="true">#</a> clearBody</h3><p>清除一个请求Body参数</p><p><code>@Apidoc\\Before(event=&quot;clearBody&quot;,key=&quot;参数名&quot;)</code></p><h3 id="setglobalheader" tabindex="-1"><a class="header-anchor" href="#setglobalheader" aria-hidden="true">#</a> setGlobalHeader</h3><p>设置一个全局请求头参数</p><p><code>@Apidoc\\After(event=&quot;setGlobalHeader&quot;,key=&quot;参数名&quot;,value=&quot;参数值&quot;,desc=&quot;参数描述&quot;)</code></p><h3 id="setglobalquery" tabindex="-1"><a class="header-anchor" href="#setglobalquery" aria-hidden="true">#</a> setGlobalQuery</h3><p>设置一个全局请求Query参数</p><p><code>@Apidoc\\After(event=&quot;setGlobalQuery&quot;,key=&quot;参数名&quot;,value=&quot;参数值&quot;,desc=&quot;参数描述&quot;)</code></p><h3 id="setglobalbody" tabindex="-1"><a class="header-anchor" href="#setglobalbody" aria-hidden="true">#</a> setGlobalBody</h3><p>设置一个全局请求Body参数</p><p><code>@Apidoc\\After(event=&quot;setGlobalBody&quot;,key=&quot;参数名&quot;,value=&quot;参数值&quot;,desc=&quot;参数描述&quot;)</code></p><h3 id="clearglobalheader" tabindex="-1"><a class="header-anchor" href="#clearglobalheader" aria-hidden="true">#</a> clearGlobalHeader</h3><p>清除一个全局请求头参数</p><p><code>@Apidoc\\Before(event=&quot;clearGlobalHeader&quot;,key=&quot;参数名&quot;)</code></p><h3 id="clearglobalquery" tabindex="-1"><a class="header-anchor" href="#clearglobalquery" aria-hidden="true">#</a> clearGlobalQuery</h3><p>清除一个全局请求Query参数</p><p><code>@Apidoc\\Before(event=&quot;clearGlobalQuery&quot;,key=&quot;参数名&quot;)</code></p><h3 id="clearglobalbody" tabindex="-1"><a class="header-anchor" href="#clearglobalbody" aria-hidden="true">#</a> clearGlobalBody</h3><p>清除一个全局请求Body参数</p><p><code>@Apidoc\\Before(event=&quot;clearGlobalBody&quot;,key=&quot;参数名&quot;)</code></p><h3 id="ajax" tabindex="-1"><a class="header-anchor" href="#ajax" aria-hidden="true">#</a> ajax</h3><p>发送一个请求</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token doc-comment comment">/**
 * @Apidoc\\Before(event=&quot;ajax&quot;,url=&quot;请求地址&quot;,method=&quot;请求类型&quot;,contentType=&quot;appicateion-json&quot;,
 *    @Apidoc\\Before(event=&quot;setBody&quot;,key=&quot;key&quot;,value=&quot;body.phone&quot;),
 *    @Apidoc\\Before(event=&quot;setBody&quot;,key=&quot;abc&quot;,value=&quot;123456&quot;),
 *    @Apidoc\\After(event=&quot;setHeader&quot;,key=&quot;X-CSRF-TOKEN&quot;,value=&quot;res.data.token&quot;)
 * )
 * /
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以上注解，会在接口调试前发送一个请求，请求参数为<code>{key:&quot;这个值为调试接口参数的phone字段&quot;,abc:&quot;123456&quot;}</code>，请求响应后执行<code>setHeader</code>设置一个key为<code>X-CSRF-TOKEN</code>的请求头参数，值为该请求返回值中的<code>res.data.token</code></p>`,53),u=[r];function n(c,s){return o(),t("div",null,u)}const p=e(d,[["render",n],["__file","debugEvent.html.vue"]]);export{p as default};

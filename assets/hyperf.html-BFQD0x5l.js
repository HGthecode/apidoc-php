import{D as h}from"./DownloadFe-n9XnKUp8.js";import{d as u,c as p,a,b as e,e as r,r as k,o as d}from"./app-BzzORN4K.js";import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";const c=u({__name:"hyperf.html",setup(n,{expose:i}){i();const s={get DownloadFe(){return h}};return Object.defineProperty(s,"__isScriptSetup",{enumerable:!1,value:!0}),s}});function F(n,i,s,t,g,A){const l=k("ClientOnly");return d(),p("div",null,[i[0]||(i[0]=a(`<h1 id="hyperf-安装" tabindex="-1"><a class="header-anchor" href="#hyperf-安装"><span>Hyperf 安装</span></a></h1><div class="hint-container tip"><p class="hint-container-title">在安装本插件时，确保你已成功安装 Hyperf 的项目并成功运行</p><p>安装方法参考：<a href="https://hyperf.wiki/2.2/#/zh-cn/quick-start/install" target="_blank" rel="noopener noreferrer">Hyperf2.x 安装文档</a></p></div><h2 id="_1、安装插件" tabindex="-1"><a class="header-anchor" href="#_1、安装插件"><span>1、安装插件</span></a></h2><p>进入项目根目录，执行如下命令：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">composer</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> require</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> hg/apidoc</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="_2、生成配置文件" tabindex="-1"><a class="header-anchor" href="#_2、生成配置文件"><span>2、生成配置文件</span></a></h2><p>项目根目录下执行：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>php bin/hyperf.php vendor:publish hg/apidoc</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p>命令执行后在将在<code>config/autoload</code>目录下生成<code>apidoc.php</code>配置文件</p></blockquote><div class="hint-container warning"><p class="hint-container-title">根据项目结构调整 apps 配置</p><div class="language-php line-numbers-mode" data-highlighter="shiki" data-ext="php" data-title="php" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// /config/autoload/apidoc.php</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;apps&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">           =&gt; [</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    [</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &#39;title&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=&gt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;Api接口&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        // （注意）核对配置文件中此目录是否正确</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &#39;path&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=&gt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;app\\controller&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &#39;key&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=&gt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;api&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    ]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">],</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h2 id="_3、注册-apidoc-路由" tabindex="-1"><a class="header-anchor" href="#_3、注册-apidoc-路由"><span>3、注册 Apidoc 路由</span></a></h2><p>将以下代码复制到<code>config/routes.php</code></p><div class="language-php line-numbers-mode" data-highlighter="shiki" data-ext="php" data-title="php" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">hg\\apidoc\\providers\\</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">HyperfService</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">register</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="_4、添加前端页面" tabindex="-1"><a class="header-anchor" href="#_4、添加前端页面"><span>4、添加前端页面</span></a></h2>`,14)),e(l,null,{default:r(()=>[e(t.DownloadFe)]),_:1}),i[1]||(i[1]=a(`<p>下载完成后解压，将 apidoc 文件夹拷贝到你的项目 public 目录下</p><p>打开浏览器访问 <a href="http://xn--6qqv7i2xdt95b/apidoc/index.html" target="_blank" rel="noopener noreferrer">http://你的域名/apidoc/index.html</a> ，出现接口文档页面，表示安装成功。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>如果以上地址 访问不了（Not Found），可尝试 <a href="https://hyperf.wiki/3.0/#/zh-cn/filesystem" target="_blank" rel="noopener noreferrer">配置静态资源</a>,</p></div><h2 id="配置异常响应" tabindex="-1"><a class="header-anchor" href="#配置异常响应"><span>配置异常响应</span></a></h2><p>由于框架会对全局异常进行处理，如 apidoc 的异常未被正确响应，会导致页面打不开或报错，配置以下异常处理来解决问题。</p><div class="language-php line-numbers-mode" data-highlighter="shiki" data-ext="php" data-title="php" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 找到你的项目所配置的异常处理类，本示例为</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// App\\Exception\\Handler\\AppExceptionHandler.php</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> function</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> handle</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Throwable</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $throwable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">ResponseInterface</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $response</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // Apidoc 异常处理</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$throwable</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;"> instanceof</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> \\hg\\apidoc\\exception\\</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">HttpException</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        // 格式化输出</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        $data</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> json_encode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">([</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            &#39;code&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $throwable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">getCode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(),</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            &#39;message&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $throwable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">getMessage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(),</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        ],</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;"> JSON_UNESCAPED_UNICODE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        // 阻止异常冒泡</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        $this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">stopPropagation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $response</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">withStatus</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$throwable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">getStatusCode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">())-&gt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">withBody</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> SwooleStream</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">));</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    //....</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6))])}const m=o(c,[["render",F],["__file","hyperf.html.vue"]]),v=JSON.parse('{"path":"/guide/install/hyperf.html","title":"Hyperf 安装","lang":"zh-CN","frontmatter":{"category":"安装","headerDepth":2,"description":"Hyperf 安装 在安装本插件时，确保你已成功安装 Hyperf 的项目并成功运行 安装方法参考：Hyperf2.x 安装文档 1、安装插件 进入项目根目录，执行如下命令： 2、生成配置文件 项目根目录下执行： 命令执行后在将在config/autoload目录下生成apidoc.php配置文件 根据项目结构调整 apps 配置 3、注册 Apido...","head":[["meta",{"property":"og:url","content":"https://docs.apidoc.icu/guide/install/hyperf.html"}],["meta",{"property":"og:site_name","content":"Apidoc"}],["meta",{"property":"og:title","content":"Hyperf 安装"}],["meta",{"property":"og:description","content":"Hyperf 安装 在安装本插件时，确保你已成功安装 Hyperf 的项目并成功运行 安装方法参考：Hyperf2.x 安装文档 1、安装插件 进入项目根目录，执行如下命令： 2、生成配置文件 项目根目录下执行： 命令执行后在将在config/autoload目录下生成apidoc.php配置文件 根据项目结构调整 apps 配置 3、注册 Apido..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-25T14:19:18.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-25T14:19:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Hyperf 安装\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-12-25T14:19:18.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"HG\\",\\"url\\":\\"https://github.com/HGthecode\\"}]}"]]},"headers":[{"level":2,"title":"1、安装插件","slug":"_1、安装插件","link":"#_1、安装插件","children":[]},{"level":2,"title":"2、生成配置文件","slug":"_2、生成配置文件","link":"#_2、生成配置文件","children":[]},{"level":2,"title":"3、注册 Apidoc 路由","slug":"_3、注册-apidoc-路由","link":"#_3、注册-apidoc-路由","children":[]},{"level":2,"title":"4、添加前端页面","slug":"_4、添加前端页面","link":"#_4、添加前端页面","children":[]},{"level":2,"title":"配置异常响应","slug":"配置异常响应","link":"#配置异常响应","children":[]}],"git":{"createdTime":1666685788000,"updatedTime":1735136358000,"contributors":[{"name":"HG","username":"HG","email":"36032426+HGthecode@users.noreply.github.com","commits":7,"url":"https://github.com/HG"}]},"readingTime":{"minutes":1.35,"words":405},"filePathRelative":"guide/install/hyperf.md","localizedDate":"2022年10月25日","autoDesc":true}');export{m as comp,v as data};

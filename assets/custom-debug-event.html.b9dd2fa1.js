import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as a,a as t}from"./app.fe7d8137.js";const e={},p=t(`<h1 id="自定义调试时事件" tabindex="-1"><a class="header-anchor" href="#自定义调试时事件" aria-hidden="true">#</a> 自定义调试时事件</h1><h2 id="配置自定义试时事件处理函数" tabindex="-1"><a class="header-anchor" href="#配置自定义试时事件处理函数" aria-hidden="true">#</a> 配置自定义试时事件处理函数：</h2><blockquote><p>以下示例为自定义<code>setToken</code>方法，将请求中指定字段的值处理（加上Bearer ），并将其设置到全局请求参数</p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// apidoc/config.js</span>
window<span class="token punctuation">.</span>apidocFeConfig <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  <span class="token comment">// （选配）调试时事件，处理参数值的方法</span>
  <span class="token constant">DEBUG_EVENTS</span><span class="token operator">:</span><span class="token punctuation">{</span>
    <span class="token comment">//...,</span>
    <span class="token comment">// 自定义设置token到全局请求参数</span>
    <span class="token function">setToken</span><span class="token punctuation">(</span><span class="token parameter">param</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> token<span class="token operator">=</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Bearer </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>param<span class="token punctuation">.</span>value<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setGlobalHeader</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          <span class="token operator">...</span>param<span class="token punctuation">,</span>
          <span class="token literal-property property">value</span><span class="token operator">:</span>token
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token function">resolve</span><span class="token punctuation">(</span>param<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token operator">=&gt;</span><span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="接口注解时使用" tabindex="-1"><a class="header-anchor" href="#接口注解时使用" aria-hidden="true">#</a> 接口注解时使用</h2><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>  <span class="token attribute"><span class="token delimiter punctuation">#[</span><span class="token attribute-content"><span class="token attribute-class-name class-name class-name-fully-qualified">Apidoc<span class="token punctuation">\\</span>Title</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;登录事件&quot;</span><span class="token punctuation">)</span></span><span class="token delimiter punctuation">]</span></span>
  <span class="token attribute"><span class="token delimiter punctuation">#[</span><span class="token attribute-content"><span class="token attribute-class-name class-name class-name-fully-qualified">Apidoc<span class="token punctuation">\\</span>Method</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;POST&quot;</span><span class="token punctuation">)</span></span><span class="token delimiter punctuation">]</span></span>
  <span class="token attribute"><span class="token delimiter punctuation">#[</span><span class="token attribute-content"><span class="token attribute-class-name class-name class-name-fully-qualified">Apidoc<span class="token punctuation">\\</span>After</span><span class="token punctuation">(</span><span class="token attribute-class-name class-name">event</span><span class="token punctuation">:</span> <span class="token string double-quoted-string">&quot;setToken&quot;</span><span class="token punctuation">,</span><span class="token attribute-class-name class-name">key</span><span class="token punctuation">:</span> <span class="token string double-quoted-string">&quot;Authorization&quot;</span><span class="token punctuation">,</span><span class="token attribute-class-name class-name">value</span><span class="token punctuation">:</span> <span class="token string double-quoted-string">&quot;res.data.data.token&quot;</span><span class="token punctuation">,</span><span class="token attribute-class-name class-name">desc</span><span class="token punctuation">:</span> <span class="token string double-quoted-string">&quot;设置全局token&quot;</span><span class="token punctuation">)</span></span><span class="token delimiter punctuation">]</span></span>
  <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">login</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Request</span> <span class="token variable">$request</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">//伪代码</span>
    <span class="token variable">$res</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
        <span class="token string single-quoted-string">&#39;uid&#39;</span><span class="token operator">=&gt;</span><span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token string single-quoted-string">&#39;token&#39;</span> <span class="token operator">=&gt;</span> <span class="token function">uniqid</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;code&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;data&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$res</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),o=[p];function c(i,l){return s(),a("div",null,o)}const k=n(e,[["render",c],["__file","custom-debug-event.html.vue"]]);export{k as default};

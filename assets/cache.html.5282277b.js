import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as a,a as e}from"./app.ef251c3b.js";const c={},t=e(`<h1 id="文档缓存" tabindex="-1"><a class="header-anchor" href="#文档缓存" aria-hidden="true">#</a> 文档缓存</h1><div class="custom-container warning"><p class="custom-container-title">建议</p><p>开发环境中关闭缓存，可方便实时修改查看效果，提升开发效率。正式环境建议开启缓存。</p></div><p>开启缓存后，每次访问接口文档则直接使用缓存数据展示文档，大大提升性能和安全性。 但当修改了接口注释后，需手动点击右上角<code>工具</code>中的更新按钮，来生成新的文档数据。</p><p>配置文件<code>apidoc.php</code>中的<code>cache</code>设置为如下：</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// apidoc.php</span>
<span class="token comment">// 缓存配置</span>
<span class="token string single-quoted-string">&#39;cache&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>
    <span class="token comment">// 是否开启缓存</span>
    <span class="token string single-quoted-string">&#39;enable&#39;</span> <span class="token operator">=&gt;</span> <span class="token constant boolean">false</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),o=[t];function i(p,l){return s(),a("div",null,o)}const u=n(c,[["render",i],["__file","cache.html.vue"]]);export{u as default};

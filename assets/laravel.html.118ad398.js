import{D as i}from"./DownloadFe.cf665f83.js";import{f as c,o as l,c as r,b as n,d as a,e as s,w as d,a as p,r as t,u}from"./app.505796a2.js";import{_ as v}from"./_plugin-vue_export-helper.cdc0426e.js";const k=n("h1",{id:"laravel安装",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#laravel安装","aria-hidden":"true"},"#"),a(" Laravel安装")],-1),m={class:"custom-container tip"},h=n("p",{class:"custom-container-title"},"在安装本插件时，确保你已成功安装Laravel的项目并成功运行",-1),g={href:"https://laravel.com/docs/8.x/installation",target:"_blank",rel:"noopener noreferrer"},b=p(`<h2 id="_1、安装插件" tabindex="-1"><a class="header-anchor" href="#_1、安装插件" aria-hidden="true">#</a> 1、安装插件</h2><p>进入项目根目录，执行如下命令：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>composer require hg/apidoc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_2、生成配置文件" tabindex="-1"><a class="header-anchor" href="#_2、生成配置文件" aria-hidden="true">#</a> 2、生成配置文件</h2><p>项目根目录下执行：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>php artisan vendor:publish --provider=&quot;hg\\apidoc\\providers\\LaravelService&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>命令执行后在将在<code>config</code>目录下生成<code>apidoc.php</code>配置文件</p><div class="custom-container warning"><p class="custom-container-title">根据项目结构调整apps配置</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// /config/apidoc.php</span>
<span class="token string single-quoted-string">&#39;apps&#39;</span>           <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>
    <span class="token punctuation">[</span>
        <span class="token string single-quoted-string">&#39;title&#39;</span><span class="token operator">=&gt;</span><span class="token string single-quoted-string">&#39;Api接口&#39;</span><span class="token punctuation">,</span>
        <span class="token comment">// （注意）核对配置文件中此目录是否正确</span>
        <span class="token string single-quoted-string">&#39;path&#39;</span><span class="token operator">=&gt;</span><span class="token string single-quoted-string">&#39;app\\controller&#39;</span><span class="token punctuation">,</span>
        <span class="token string single-quoted-string">&#39;key&#39;</span><span class="token operator">=&gt;</span><span class="token string single-quoted-string">&#39;api&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">]</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h2 id="_3、添加前端页面" tabindex="-1"><a class="header-anchor" href="#_3、添加前端页面" aria-hidden="true">#</a> 3、添加前端页面</h2>`,9),_=n("p",null,"下载完成后解压，将apidoc文件夹拷贝到你的项目 public 目录下",-1),f={href:"http://xn--6qqv7i2xdt95b/apidoc/",target:"_blank",rel:"noopener noreferrer"},x=p(`<h2 id="配置异常响应" tabindex="-1"><a class="header-anchor" href="#配置异常响应" aria-hidden="true">#</a> 配置异常响应</h2><p>由于框架会对全局异常进行处理，如apidoc的异常未被正确响应，会导致页面打不开或报错，配置以下异常处理来解决问题。</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// 找到你的项目所配置的异常处理类，默认为</span>
<span class="token comment">// app/Exceptions/Handler.php</span>
<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">register</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">reportable</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name type-declaration">Throwable</span> <span class="token variable">$e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$e</span> <span class="token keyword">instanceof</span> <span class="token class-name class-name-fully-qualified"><span class="token punctuation">\\</span>hg<span class="token punctuation">\\</span>apidoc<span class="token punctuation">\\</span>exception<span class="token punctuation">\\</span>HttpException</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token function">abort</span><span class="token punctuation">(</span>
                <span class="token variable">$e</span><span class="token operator">-&gt;</span><span class="token function">getStatusCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token variable">$e</span><span class="token operator">-&gt;</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),q=c({__name:"laravel.html",setup(w){return(y,C)=>{const e=t("ExternalLinkIcon"),o=t("ClientOnly");return l(),r("div",null,[k,n("div",m,[h,n("p",null,[a("安装方法参考："),n("a",g,[a("laravel8.x安装文档"),s(e)])])]),b,s(o,null,{default:d(()=>[s(u(i))]),_:1}),_,n("p",null,[a("打开浏览器访问 "),n("a",f,[a("http://你的域名/apidoc/"),s(e)]),a(" ，出现接口文档页面，表示安装成功。")]),x])}}}),N=v(q,[["__file","laravel.html.vue"]]);export{N as default};

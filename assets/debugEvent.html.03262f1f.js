import{_ as i}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as u,c as r,e as c,w as a,b as n,d as s,a as l,r as d}from"./app.c4da4f2c.js";const k="/images/debug-event-1.png",m={},b=n("h1",{id:"调试时的事件",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#调试时的事件","aria-hidden":"true"},"#"),s(" 调试时的事件")],-1),v=n("p",null,[s("接口调试时分别触发"),n("code",null,"before"),s("请求发起前事件，与"),n("code",null,"after"),s("请求响应后事件。")],-1),g=n("p",null,"可通过接口的注解来定义执行的事件，如下：",-1),h=n("div",{class:"language-php line-numbers-mode","data-ext":"php"},[n("pre",{class:"language-php"},[n("code",null,[n("span",{class:"token attribute"},[n("span",{class:"token delimiter punctuation"},"#["),n("span",{class:"token attribute-content"},[s(`
    `),n("span",{class:"token attribute-class-name class-name class-name-fully-qualified"},[s("Apidoc"),n("span",{class:"token punctuation"},"\\"),s("Title")]),n("span",{class:"token punctuation"},"("),n("span",{class:"token string double-quoted-string"},'"调试时事件"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token attribute-class-name class-name class-name-fully-qualified"},[s("Apidoc"),n("span",{class:"token punctuation"},"\\"),s("Method")]),n("span",{class:"token punctuation"},"("),n("span",{class:"token string double-quoted-string"},'"POST"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token attribute-class-name class-name class-name-fully-qualified"},[s("Apidoc"),n("span",{class:"token punctuation"},"\\"),s("Param")]),n("span",{class:"token punctuation"},"("),n("span",{class:"token string double-quoted-string"},'"username"'),n("span",{class:"token punctuation"},","),n("span",{class:"token attribute-class-name class-name"},"type"),n("span",{class:"token punctuation"},":"),n("span",{class:"token string double-quoted-string"},'"string"'),n("span",{class:"token punctuation"},","),n("span",{class:"token attribute-class-name class-name"},"desc"),n("span",{class:"token punctuation"},":"),n("span",{class:"token string double-quoted-string"},'"用户名"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token attribute-class-name class-name class-name-fully-qualified"},[s("Apidoc"),n("span",{class:"token punctuation"},"\\"),s("Param")]),n("span",{class:"token punctuation"},"("),n("span",{class:"token string double-quoted-string"},'"password"'),n("span",{class:"token punctuation"},","),n("span",{class:"token attribute-class-name class-name"},"type"),n("span",{class:"token punctuation"},":"),n("span",{class:"token string double-quoted-string"},'"string"'),n("span",{class:"token punctuation"},","),n("span",{class:"token attribute-class-name class-name"},"desc"),n("span",{class:"token punctuation"},":"),n("span",{class:"token string double-quoted-string"},'"密码"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token attribute-class-name class-name class-name-fully-qualified"},[s("Apidoc"),n("span",{class:"token punctuation"},"\\"),s("Before")]),n("span",{class:"token punctuation"},"("),n("span",{class:"token attribute-class-name class-name"},"event"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token string double-quoted-string"},'"md5"'),n("span",{class:"token punctuation"},","),n("span",{class:"token attribute-class-name class-name"},"key"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token string double-quoted-string"},'"password"'),n("span",{class:"token punctuation"},","),n("span",{class:"token attribute-class-name class-name"},"value"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token string double-quoted-string"},'"body.password"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token attribute-class-name class-name class-name-fully-qualified"},[s("Apidoc"),n("span",{class:"token punctuation"},"\\"),s("After")]),n("span",{class:"token punctuation"},"("),n("span",{class:"token attribute-class-name class-name"},"event"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token string double-quoted-string"},'"setGlobalHeader"'),n("span",{class:"token punctuation"},","),n("span",{class:"token attribute-class-name class-name"},"key"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token string double-quoted-string"},'"Authorization"'),n("span",{class:"token punctuation"},","),n("span",{class:"token attribute-class-name class-name"},"value"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token string double-quoted-string"},'"res.data.data.token"'),n("span",{class:"token punctuation"},","),n("span",{class:"token attribute-class-name class-name"},"desc"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token string double-quoted-string"},'"Token"'),n("span",{class:"token punctuation"},")"),s(`
`)]),n("span",{class:"token delimiter punctuation"},"]")]),s(`
`),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function-definition function"},"debug"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name type-declaration"},"Request"),s(),n("span",{class:"token variable"},"$request"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token comment"},"//..."),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),q=n("div",{class:"language-php line-numbers-mode","data-ext":"php"},[n("pre",{class:"language-php"},[n("code",null,[n("span",{class:"token doc-comment comment"},`/**
 * @Apidoc\\Title ("调试时事件")
 * @Apidoc\\Url("/admin/demo/debug")
 * @Apidoc\\Method("POST")
 * @Apidoc\\Param("username",type="string",desc="用户名")
 * @Apidoc\\Param("password",type="string",desc="密码")
 * @Apidoc\\Before(event="md5",key="password",value="body.password")
 * @Apidoc\\After(event="setGlobalHeader",key="Authorization",value="res.data.data.token",desc="Toekn")
 */`),s(`
`),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function-definition function"},"debug"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name type-declaration"},"Request"),s(),n("span",{class:"token variable"},"$request"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token comment"},"//..."),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),y=l('<p>以上例子中，会执行以下事件：</p><p>1、请求发起前，将请求参数<code>password</code>进行md5（自定义事件）。</p><p>2、请求响应后，设置一个全局请求头参数<code>Authorization</code>，参数值为响应结果中返回数据中的<code>data.token</code>。</p><h2 id="before-after注解的参数" tabindex="-1"><a class="header-anchor" href="#before-after注解的参数" aria-hidden="true">#</a> Before|After注解的参数</h2><table><thead><tr><th>参数名</th><th>说明</th></tr></thead><tbody><tr><td>event</td><td>事件方法名，以下内置事件、及config.js配置的DEBUG_EVENTS自定义的方法名</td></tr><tr><td>name</td><td>事件名称，用于显示事件的名称</td></tr><tr><td>key</td><td>字段名</td></tr><tr><td>value</td><td>字段值，可直接设置值，或以<code>query.xxx</code>、<code>body.xxx</code>取请求参数中的值；以<code>res.xxx</code>取请求响应结果中的参数</td></tr><tr><td>desc</td><td>字段值描述</td></tr><tr><td>url</td><td>event为ajax时，定义请求地址</td></tr><tr><td>method</td><td>event为ajax时，定义请求类型</td></tr><tr><td>contentType</td><td>event为ajax时，定义contentType</td></tr><tr><td>before</td><td>event为ajax时，定义该请求前事件</td></tr><tr><td>after</td><td>event为ajax时，定义该请求后事件</td></tr></tbody></table><h2 id="内置事件" tabindex="-1"><a class="header-anchor" href="#内置事件" aria-hidden="true">#</a> 内置事件</h2><h3 id="setheader" tabindex="-1"><a class="header-anchor" href="#setheader" aria-hidden="true">#</a> setHeader</h3><blockquote><p><code>before</code>请求发起前有效</p></blockquote><p>设置一个请求头参数</p><p><code>@Apidoc\\Before(event=&quot;setHeader&quot;,key=&quot;参数名&quot;,value=&quot;参数值&quot;)</code></p><h3 id="setquery" tabindex="-1"><a class="header-anchor" href="#setquery" aria-hidden="true">#</a> setQuery</h3><blockquote><p><code>before</code>请求发起前有效</p></blockquote><p>设置一个请求Query参数</p><p><code>@Apidoc\\Before(event=&quot;setQuery&quot;,key=&quot;参数名&quot;,value=&quot;参数值&quot;)</code></p><h3 id="setbody" tabindex="-1"><a class="header-anchor" href="#setbody" aria-hidden="true">#</a> setBody</h3><blockquote><p><code>before</code>请求发起前有效</p></blockquote><p>设置一个请求参数</p><p><code>@Apidoc\\Before(event=&quot;setBody&quot;,key=&quot;参数名&quot;,value=&quot;参数值&quot;)</code></p><h3 id="clearheader" tabindex="-1"><a class="header-anchor" href="#clearheader" aria-hidden="true">#</a> clearHeader</h3><p>清除一个请求头参数</p><p><code>@Apidoc\\Before(event=&quot;clearHeader&quot;,key=&quot;参数名&quot;)</code></p><h3 id="clearquery" tabindex="-1"><a class="header-anchor" href="#clearquery" aria-hidden="true">#</a> clearQuery</h3><p>清除一个请求Query参数</p><p><code>@Apidoc\\Before(event=&quot;clearQuery&quot;,key=&quot;参数名&quot;)</code></p><h3 id="clearbody" tabindex="-1"><a class="header-anchor" href="#clearbody" aria-hidden="true">#</a> clearBody</h3><p>清除一个请求Body参数</p><p><code>@Apidoc\\Before(event=&quot;clearBody&quot;,key=&quot;参数名&quot;)</code></p><h3 id="setglobalheader" tabindex="-1"><a class="header-anchor" href="#setglobalheader" aria-hidden="true">#</a> setGlobalHeader</h3><p>设置一个全局请求头参数</p><p><code>@Apidoc\\After(event=&quot;setGlobalHeader&quot;,key=&quot;参数名&quot;,value=&quot;参数值&quot;,desc=&quot;参数描述&quot;)</code></p><h3 id="setglobalquery" tabindex="-1"><a class="header-anchor" href="#setglobalquery" aria-hidden="true">#</a> setGlobalQuery</h3><p>设置一个全局请求Query参数</p><p><code>@Apidoc\\After(event=&quot;setGlobalQuery&quot;,key=&quot;参数名&quot;,value=&quot;参数值&quot;,desc=&quot;参数描述&quot;)</code></p><h3 id="setglobalbody" tabindex="-1"><a class="header-anchor" href="#setglobalbody" aria-hidden="true">#</a> setGlobalBody</h3><p>设置一个全局请求Body参数</p><p><code>@Apidoc\\After(event=&quot;setGlobalBody&quot;,key=&quot;参数名&quot;,value=&quot;参数值&quot;,desc=&quot;参数描述&quot;)</code></p><h3 id="clearglobalheader" tabindex="-1"><a class="header-anchor" href="#clearglobalheader" aria-hidden="true">#</a> clearGlobalHeader</h3><p>清除一个全局请求头参数</p><p><code>@Apidoc\\Before(event=&quot;clearGlobalHeader&quot;,key=&quot;参数名&quot;)</code></p><h3 id="clearglobalquery" tabindex="-1"><a class="header-anchor" href="#clearglobalquery" aria-hidden="true">#</a> clearGlobalQuery</h3><p>清除一个全局请求Query参数</p><p><code>@Apidoc\\Before(event=&quot;clearGlobalQuery&quot;,key=&quot;参数名&quot;)</code></p><h3 id="clearglobalbody" tabindex="-1"><a class="header-anchor" href="#clearglobalbody" aria-hidden="true">#</a> clearGlobalBody</h3><p>清除一个全局请求Body参数</p><p><code>@Apidoc\\Before(event=&quot;clearGlobalBody&quot;,key=&quot;参数名&quot;)</code></p><h3 id="ajax" tabindex="-1"><a class="header-anchor" href="#ajax" aria-hidden="true">#</a> ajax</h3><p>发送一个请求</p>',47),f=n("div",{class:"language-php line-numbers-mode","data-ext":"php"},[n("pre",{class:"language-php"},[n("code",null,[n("span",{class:"token attribute"},[n("span",{class:"token delimiter punctuation"},"#["),n("span",{class:"token attribute-content"},[s(`
    `),n("span",{class:"token attribute-class-name class-name class-name-fully-qualified"},[s("Apidoc"),n("span",{class:"token punctuation"},"\\"),s("Before")]),n("span",{class:"token punctuation"},"("),n("span",{class:"token attribute-class-name class-name"},"event"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token string double-quoted-string"},'"ajax"'),n("span",{class:"token punctuation"},","),n("span",{class:"token attribute-class-name class-name"},"value"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token string double-quoted-string"},'"body."'),n("span",{class:"token punctuation"},","),n("span",{class:"token attribute-class-name class-name"},"url"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token string double-quoted-string"},'"/api/xxx/xx"'),n("span",{class:"token punctuation"},","),n("span",{class:"token attribute-class-name class-name"},"method"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token string double-quoted-string"},'"POST"'),n("span",{class:"token punctuation"},","),n("span",{class:"token attribute-class-name class-name"},"before"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token punctuation"},"["),s(`
        `),n("span",{class:"token punctuation"},"["),n("span",{class:"token string single-quoted-string"},"'event'"),n("span",{class:"token operator"},"=>"),n("span",{class:"token string single-quoted-string"},"'setBody'"),n("span",{class:"token punctuation"},","),n("span",{class:"token string double-quoted-string"},'"key"'),n("span",{class:"token operator"},"=>"),n("span",{class:"token string double-quoted-string"},'"key"'),n("span",{class:"token punctuation"},","),n("span",{class:"token string double-quoted-string"},'"value"'),n("span",{class:"token operator"},"=>"),n("span",{class:"token string double-quoted-string"},'"123456"'),n("span",{class:"token punctuation"},"]"),s(`
    `),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),n("span",{class:"token attribute-class-name class-name"},"after"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token punctuation"},"["),s(`
        `),n("span",{class:"token punctuation"},"["),n("span",{class:"token string single-quoted-string"},"'event'"),n("span",{class:"token operator"},"=>"),n("span",{class:"token string single-quoted-string"},"'setHeader'"),n("span",{class:"token punctuation"},","),n("span",{class:"token string double-quoted-string"},'"key"'),n("span",{class:"token operator"},"=>"),n("span",{class:"token string double-quoted-string"},'"X-CSRF-TOKEN"'),n("span",{class:"token punctuation"},","),n("span",{class:"token string double-quoted-string"},'"value"'),n("span",{class:"token operator"},"=>"),n("span",{class:"token string double-quoted-string"},'"res.data.data.token"'),n("span",{class:"token punctuation"},"]"),s(`
    `),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(`
`)]),n("span",{class:"token delimiter punctuation"},"]")]),s(`
`),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function-definition function"},"debug"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name type-declaration"},"Request"),s(),n("span",{class:"token variable"},"$request"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token comment"},"//..."),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),x=n("div",{class:"language-php line-numbers-mode","data-ext":"php"},[n("pre",{class:"language-php"},[n("code",null,[n("span",{class:"token doc-comment comment"},[s(`/**
 * @Apidoc\\Before(event="ajax",value="body.",url="/api/xxx/xx",method="POST",contentType="appicateion-json",before=`),n("span",{class:"token punctuation"},"{"),s(`
 *   @Apidoc\\Before(event="setBody",key="key",value="123456")
 * `),n("span",{class:"token punctuation"},"}"),s(",after="),n("span",{class:"token punctuation"},"{"),s(`
 *   @Apidoc\\After(event="setHeader",key="X-CSRF-TOKEN",value="res.data.data.token")
 * `),n("span",{class:"token punctuation"},"}"),s(`)
 **/`)]),s(`
`),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function-definition function"},"debug"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name type-declaration"},"Request"),s(),n("span",{class:"token variable"},"$request"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token comment"},"//..."),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),A=l(`<p>在前端配置文件config.js配置中加入自定义事件，以下实现一个将当前请求拼成get的url</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>window<span class="token punctuation">.</span>apidocFeConfig <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token comment">// （选配）自定义调试时事件</span>
  <span class="token constant">DEBUG_EVENTS</span><span class="token operator">:</span><span class="token punctuation">{</span>
    <span class="token comment">//...,</span>
    <span class="token function">renderGetUrl</span><span class="token punctuation">(</span><span class="token parameter">param</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment">// 必须为返回Promise</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> <span class="token punctuation">{</span>result<span class="token punctuation">}</span><span class="token operator">=</span>param
            <span class="token keyword">function</span> <span class="token function">urlEncode</span><span class="token punctuation">(</span><span class="token parameter">param<span class="token punctuation">,</span> key<span class="token punctuation">,</span> encode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>param <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
                <span class="token keyword">var</span> paramStr <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
                <span class="token keyword">var</span> t <span class="token operator">=</span> <span class="token keyword">typeof</span><span class="token punctuation">(</span>param<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>t <span class="token operator">==</span> <span class="token string">&#39;string&#39;</span> <span class="token operator">||</span> t <span class="token operator">==</span> <span class="token string">&#39;number&#39;</span> <span class="token operator">||</span> t <span class="token operator">==</span> <span class="token string">&#39;boolean&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    paramStr <span class="token operator">+=</span> <span class="token punctuation">(</span>paramStr<span class="token operator">?</span><span class="token string">&#39;&amp;&#39;</span><span class="token operator">:</span><span class="token string">&#39;?&#39;</span><span class="token punctuation">)</span> <span class="token operator">+</span> key <span class="token operator">+</span> <span class="token string">&#39;=&#39;</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>encode <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> encode<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>param<span class="token punctuation">)</span> <span class="token operator">:</span> param<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token keyword">in</span> param<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">var</span> k <span class="token operator">=</span> key <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> i<span class="token operator">:</span> key <span class="token operator">+</span> <span class="token punctuation">(</span>param <span class="token keyword">instanceof</span> <span class="token class-name">Array</span> <span class="token operator">?</span> <span class="token string">&#39;[&#39;</span> <span class="token operator">+</span> i <span class="token operator">+</span> <span class="token string">&#39;]&#39;</span><span class="token operator">:</span> <span class="token string">&#39;.&#39;</span> <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        paramStr <span class="token operator">+=</span> <span class="token function">urlEncode</span><span class="token punctuation">(</span>param<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> k<span class="token punctuation">,</span> encode<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">return</span> paramStr<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">let</span> requestParams <span class="token operator">=</span> result<span class="token punctuation">.</span>config<span class="token punctuation">.</span>data
            <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>config<span class="token punctuation">.</span>method<span class="token operator">==</span><span class="token string">&quot;get&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                requestParams <span class="token operator">=</span> result<span class="token punctuation">.</span>config<span class="token punctuation">.</span>params
            <span class="token punctuation">}</span>
            <span class="token keyword">const</span> url <span class="token operator">=</span> result<span class="token punctuation">.</span>config<span class="token punctuation">.</span>baseURL <span class="token operator">+</span> result<span class="token punctuation">.</span>config<span class="token punctuation">.</span>url<span class="token operator">+</span><span class="token function">urlEncode</span><span class="token punctuation">(</span>requestParams<span class="token punctuation">)</span>
            param<span class="token punctuation">.</span>message <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;a href=&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>url<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;  target=&quot;_blank&quot;  style=&quot;color:red&quot;&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>url<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/a&gt;</span><span class="token template-punctuation string">\`</span></span>
            <span class="token function">resolve</span><span class="token punctuation">(</span>param<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2、事件调用" tabindex="-1"><a class="header-anchor" href="#_2、事件调用" aria-hidden="true">#</a> 2、事件调用</h3><p>1、接口注解调用</p>`,4),_=n("div",{class:"language-php line-numbers-mode","data-ext":"php"},[n("pre",{class:"language-php"},[n("code",null,[n("span",{class:"token attribute"},[n("span",{class:"token delimiter punctuation"},"#["),n("span",{class:"token attribute-content"},[s(`
    `),n("span",{class:"token attribute-class-name class-name class-name-fully-qualified"},[s("Apidoc"),n("span",{class:"token punctuation"},"\\"),s("Title")]),n("span",{class:"token punctuation"},"("),n("span",{class:"token string double-quoted-string"},'"自定义事件"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token attribute-class-name class-name class-name-fully-qualified"},[s("Apidoc"),n("span",{class:"token punctuation"},"\\"),s("Method")]),n("span",{class:"token punctuation"},"("),n("span",{class:"token string double-quoted-string"},'"GET"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token attribute-class-name class-name class-name-fully-qualified"},[s("Apidoc"),n("span",{class:"token punctuation"},"\\"),s("Query")]),n("span",{class:"token punctuation"},"("),n("span",{class:"token string double-quoted-string"},'"name"'),n("span",{class:"token punctuation"},","),n("span",{class:"token attribute-class-name class-name"},"type"),n("span",{class:"token punctuation"},":"),n("span",{class:"token string double-quoted-string"},'"string"'),n("span",{class:"token punctuation"},","),n("span",{class:"token attribute-class-name class-name"},"desc"),n("span",{class:"token punctuation"},":"),n("span",{class:"token string double-quoted-string"},'"姓名"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token attribute-class-name class-name class-name-fully-qualified"},[s("Apidoc"),n("span",{class:"token punctuation"},"\\"),s("Query")]),n("span",{class:"token punctuation"},"("),n("span",{class:"token string double-quoted-string"},'"phone"'),n("span",{class:"token punctuation"},","),n("span",{class:"token attribute-class-name class-name"},"type"),n("span",{class:"token punctuation"},":"),n("span",{class:"token string double-quoted-string"},'"string"'),n("span",{class:"token punctuation"},","),n("span",{class:"token attribute-class-name class-name"},"desc"),n("span",{class:"token punctuation"},":"),n("span",{class:"token string double-quoted-string"},'"手机号"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token attribute-class-name class-name class-name-fully-qualified"},[s("Apidoc"),n("span",{class:"token punctuation"},"\\"),s("After")]),n("span",{class:"token punctuation"},"("),n("span",{class:"token attribute-class-name class-name"},"event"),n("span",{class:"token punctuation"},":"),n("span",{class:"token string double-quoted-string"},'"renderGetUrl"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
`)]),n("span",{class:"token delimiter punctuation"},"]")]),s(`
`),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function-definition function"},"testMyEvent"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name type-declaration"},"Request"),s(),n("span",{class:"token variable"},"$request"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token comment"},"//..."),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),w=n("div",{class:"language-php line-numbers-mode","data-ext":"php"},[n("pre",{class:"language-php"},[n("code",null,[n("span",{class:"token doc-comment comment"},`/**
 * @Apidoc\\Title ("测试自定义事件")
 * @Apidoc\\Method("GET")
 * @Apidoc\\Query("name",type="string",desc="姓名"
 * @Apidoc\\Query("phone",type="string",desc="手机号")
 * @Apidoc\\After (event="renderGetUrl")
 */`),s(`
`),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function-definition function"},"testMyEvent"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name type-declaration"},"Request"),s(),n("span",{class:"token variable"},"$request"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token comment"},"//..."),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),B=l(`<p>2、全局调用</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>// config/apidoc.php
<span class="token php language-php"><span class="token delimiter important">&lt;?</span>
<span class="token keyword">return</span> <span class="token punctuation">[</span>
    <span class="token comment">// 全局事件</span>
    <span class="token string single-quoted-string">&#39;debug_events&#39;</span><span class="token operator">=&gt;</span><span class="token punctuation">[</span>
        <span class="token comment">// &#39;before&#39;=&gt;[</span>
            <span class="token comment">// ...</span>
        <span class="token comment">// ],</span>
        <span class="token string single-quoted-string">&#39;after&#39;</span><span class="token operator">=&gt;</span><span class="token punctuation">[</span>
            <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;event&#39;</span><span class="token operator">=&gt;</span><span class="token string single-quoted-string">&#39;renderGetUrl&#39;</span><span class="token punctuation">]</span>
        <span class="token punctuation">]</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2、指定应用/版本调用</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>// config/apidoc.php
<span class="token php language-php"><span class="token delimiter important">&lt;?</span>
<span class="token keyword">return</span> <span class="token punctuation">[</span>
    <span class="token string single-quoted-string">&#39;apps&#39;</span>           <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>
        <span class="token punctuation">[</span>
            <span class="token string single-quoted-string">&#39;title&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;Api接口&#39;</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;path&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;app\\controller&#39;</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;key&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;demo&#39;</span><span class="token punctuation">,</span>
            <span class="token comment">// 加入此配置</span>
            <span class="token string single-quoted-string">&#39;debug_events&#39;</span><span class="token operator">=&gt;</span><span class="token punctuation">[</span>
                <span class="token string single-quoted-string">&#39;after&#39;</span><span class="token operator">=&gt;</span><span class="token punctuation">[</span>
                    <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;event&#39;</span><span class="token operator">=&gt;</span><span class="token string single-quoted-string">&#39;renderGetUrl&#39;</span><span class="token punctuation">]</span>
                <span class="token punctuation">]</span>
            <span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
     <span class="token punctuation">]</span>
<span class="token punctuation">]</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3、执行效果" tabindex="-1"><a class="header-anchor" href="#_3、执行效果" aria-hidden="true">#</a> 3、执行效果</h3><p><img src="`+k+'" alt="debug-event-1"></p>',6);function G(T,E){const p=d("CodeTabs");return u(),r("div",null,[b,v,g,c(p,{id:"9",data:[{title:"PHP8原生注解"},{title:"原始注解"}],active:0,"tab-id":"apiEvent1"},{tab0:a(({title:e,value:t,isActive:o})=>[h]),tab1:a(({title:e,value:t,isActive:o})=>[q]),_:1}),y,c(p,{id:"255",data:[{title:"PHP8原生注解"},{title:"原始注解"}],active:0,"tab-id":"apiEventAjax"},{tab0:a(({title:e,value:t,isActive:o})=>[f]),tab1:a(({title:e,value:t,isActive:o})=>[x]),_:1}),A,c(p,{id:"285",data:[{title:"PHP8原生注解"},{title:"原始注解"}],active:0,"tab-id":"apiMyEvent"},{tab0:a(({title:e,value:t,isActive:o})=>[_]),tab1:a(({title:e,value:t,isActive:o})=>[w]),_:1}),B])}const Q=i(m,[["render",G],["__file","debugEvent.html.vue"]]);export{Q as default};

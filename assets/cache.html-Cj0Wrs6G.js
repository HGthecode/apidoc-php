import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,a as s,o as a}from"./app-BzzORN4K.js";const n={};function l(c,i){return a(),t("div",null,i[0]||(i[0]=[s(`<h1 id="文档缓存" tabindex="-1"><a class="header-anchor" href="#文档缓存"><span>文档缓存</span></a></h1><div class="hint-container warning"><p class="hint-container-title">建议</p><p>开发环境中关闭缓存，可方便实时修改查看效果，提升开发效率。正式环境建议开启缓存。</p></div><p>开启缓存后，每次访问接口文档则直接使用缓存数据展示文档，大大提升性能和安全性。<br> 但当修改了接口注释后，需手动点击右上角<code>工具</code>中的更新按钮，来生成新的文档数据。</p><p>配置文件<code>apidoc.php</code>中的<code>cache</code>设置为如下：</p><div class="language-php line-numbers-mode" data-highlighter="shiki" data-ext="php" data-title="php" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// apidoc.php</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 缓存配置</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;cache&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =&gt; [</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 是否开启缓存</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &#39;enable&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =&gt; </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">],</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5)]))}const o=e(n,[["render",l],["__file","cache.html.vue"]]),r=JSON.parse('{"path":"/use/function/cache.html","title":"文档缓存","lang":"zh-CN","frontmatter":{"description":"文档缓存 建议 开发环境中关闭缓存，可方便实时修改查看效果，提升开发效率。正式环境建议开启缓存。 开启缓存后，每次访问接口文档则直接使用缓存数据展示文档，大大提升性能和安全性。 但当修改了接口注释后，需手动点击右上角工具中的更新按钮，来生成新的文档数据。 配置文件apidoc.php中的cache设置为如下：","head":[["meta",{"property":"og:url","content":"https://docs.apidoc.icu/use/function/cache.html"}],["meta",{"property":"og:site_name","content":"Apidoc"}],["meta",{"property":"og:title","content":"文档缓存"}],["meta",{"property":"og:description","content":"文档缓存 建议 开发环境中关闭缓存，可方便实时修改查看效果，提升开发效率。正式环境建议开启缓存。 开启缓存后，每次访问接口文档则直接使用缓存数据展示文档，大大提升性能和安全性。 但当修改了接口注释后，需手动点击右上角工具中的更新按钮，来生成新的文档数据。 配置文件apidoc.php中的cache设置为如下："}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-10-25T08:16:28.000Z"}],["meta",{"property":"article:modified_time","content":"2022-10-25T08:16:28.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"文档缓存\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2022-10-25T08:16:28.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"HG\\",\\"url\\":\\"https://github.com/HGthecode\\"}]}"]]},"headers":[],"git":{"createdTime":1666685788000,"updatedTime":1666685788000,"contributors":[{"name":"HG","username":"HG","email":"36032426+HGthecode@users.noreply.github.com","commits":1,"url":"https://github.com/HG"}]},"readingTime":{"minutes":0.48,"words":145},"filePathRelative":"use/function/cache.md","localizedDate":"2022年10月25日","autoDesc":true}');export{o as comp,r as data};

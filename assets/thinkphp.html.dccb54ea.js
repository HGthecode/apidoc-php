import{D as o}from"./DownloadFe.7670bf31.js";import{f as c,o as l,c as r,b as n,d as s,e as a,w as d,a as p,r as t,u}from"./app.fe7d8137.js";import{_ as k}from"./_plugin-vue_export-helper.cdc0426e.js";const v=n("h1",{id:"thinkphp安装",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#thinkphp安装","aria-hidden":"true"},"#"),s(" ThinkPHP安装")],-1),h={class:"custom-container tip"},m=n("p",{class:"custom-container-title"},"在安装本插件时，确保你已成功安装ThinkPHP的项目并成功运行",-1),g={href:"https://www.kancloud.cn/manual/thinkphp5_1/353948",target:"_blank",rel:"noopener noreferrer"},b={href:"https://www.kancloud.cn/manual/thinkphp6_0/1037481",target:"_blank",rel:"noopener noreferrer"},_=p(`<h2 id="_1、安装插件" tabindex="-1"><a class="header-anchor" href="#_1、安装插件" aria-hidden="true">#</a> 1、安装插件</h2><p>进入项目根目录，执行如下命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">composer</span> require hg/apidoc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="custom-container warning"><p class="custom-container-title">根据项目结构调整apps配置</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// /config/apidoc.php</span>
<span class="token string single-quoted-string">&#39;apps&#39;</span>           <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>
    <span class="token punctuation">[</span>
        <span class="token string single-quoted-string">&#39;title&#39;</span><span class="token operator">=&gt;</span><span class="token string single-quoted-string">&#39;Api接口&#39;</span><span class="token punctuation">,</span>
        <span class="token comment">// （注意）核对配置文件中此目录是否正确</span>
        <span class="token string single-quoted-string">&#39;path&#39;</span><span class="token operator">=&gt;</span><span class="token string single-quoted-string">&#39;app\\controller&#39;</span><span class="token punctuation">,</span>
        <span class="token string single-quoted-string">&#39;key&#39;</span><span class="token operator">=&gt;</span><span class="token string single-quoted-string">&#39;api&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">]</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h2 id="_2、添加前端页面" tabindex="-1"><a class="header-anchor" href="#_2、添加前端页面" aria-hidden="true">#</a> 2、添加前端页面</h2>`,5),f=n("p",null,"下载完成后解压，将apidoc文件夹拷贝到你的项目 public 目录下",-1),x={href:"http://xn--6qqv7i2xdt95b/apidoc/",target:"_blank",rel:"noopener noreferrer"},q=p(`<h2 id="tp5-1配置" tabindex="-1"><a class="header-anchor" href="#tp5-1配置" aria-hidden="true">#</a> TP5.1配置</h2><p>1、TP5.1版本需手动配置，让Apidoc在应用初始化时注册相关服务，如下：</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// application/tags.php</span>

<span class="token comment">// 应用行为扩展定义文件</span>
<span class="token keyword">return</span> <span class="token punctuation">[</span>
    <span class="token comment">// 应用初始化</span>
    <span class="token string single-quoted-string">&#39;app_init&#39;</span>     <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>
        <span class="token comment">// 添加这一句</span>
        <span class="token string single-quoted-string">&#39;hg\\\\apidoc\\\\providers\\\\ThinkPHP5Service&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token comment">//...</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2、手动添加apidoc.php配置文件</p><p>手动将 <code>/vendor/hg/apidoc/src/config.php</code> 拷贝到<code>/config/</code>目录下，并重命名为<code>apidoc.php</code></p><h2 id="配置异常响应" tabindex="-1"><a class="header-anchor" href="#配置异常响应" aria-hidden="true">#</a> 配置异常响应</h2><p>由于框架会对全局异常进行处理，如apidoc的异常未被正确响应，会导致页面打不开或报错，配置以下异常处理来解决问题。</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// 找到你的项目所配置的异常处理类，tp6默认为</span>
<span class="token comment">// app/ExceptionHandle.php</span>
<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">render</span><span class="token punctuation">(</span><span class="token variable">$request</span><span class="token punctuation">,</span> <span class="token class-name type-declaration">Throwable</span> <span class="token variable">$e</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token class-name return-type">Response</span>
<span class="token punctuation">{</span>
    <span class="token comment">// 添加自定义异常处理机制</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$e</span> <span class="token keyword">instanceof</span> <span class="token class-name class-name-fully-qualified"><span class="token punctuation">\\</span>hg<span class="token punctuation">\\</span>apidoc<span class="token punctuation">\\</span>exception<span class="token punctuation">\\</span>HttpException</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">json</span><span class="token punctuation">(</span>
            <span class="token punctuation">[</span>
                <span class="token string double-quoted-string">&quot;code&quot;</span> <span class="token operator">=&gt;</span> <span class="token variable">$e</span><span class="token operator">-&gt;</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token string double-quoted-string">&quot;message&quot;</span> <span class="token operator">=&gt;</span> <span class="token variable">$e</span><span class="token operator">-&gt;</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token variable">$e</span><span class="token operator">-&gt;</span><span class="token function">getStatusCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),w=c({__name:"thinkphp.html",setup(y){return(P,T)=>{const e=t("ExternalLinkIcon"),i=t("ClientOnly");return l(),r("div",null,[v,n("div",h,[m,n("p",null,[s("安装方法参考："),n("a",g,[s("ThinkPHP5.1文档"),a(e)]),n("a",b,[s("ThinkPHP6文档"),a(e)])])]),_,a(i,null,{default:d(()=>[a(u(o))]),_:1}),f,n("p",null,[s("打开浏览器访问 "),n("a",x,[s("http://你的域名/apidoc/"),a(e)]),s(" ，出现接口文档页面，表示安装成功。")]),q])}}}),E=k(w,[["__file","thinkphp.html.vue"]]);export{E as default};

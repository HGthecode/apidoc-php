import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as a,a as t}from"./app.fffde0ef.js";const p="/images/custom-res.png",o={},e=t('<h1 id="自定义请求响应的显示" tabindex="-1"><a class="header-anchor" href="#自定义请求响应的显示" aria-hidden="true">#</a> 自定义请求响应的显示</h1><p><img src="'+p+`" alt="custom-res"></p><h2 id="配置自定义处理函数" tabindex="-1"><a class="header-anchor" href="#配置自定义处理函数" aria-hidden="true">#</a> 配置自定义处理函数：</h2><blockquote><p>以下示例为自定义生成一个当前请求url的跳转新窗口访问的按钮</p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// apidoc/config.js</span>
window<span class="token punctuation">.</span>apidocFeConfig <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token comment">// 自定义方法</span>
  <span class="token constant">CUSTOM_METHODS</span><span class="token operator">:</span><span class="token punctuation">{</span>
    <span class="token comment">// 自定义响应显示</span>
    <span class="token function-variable function">RESPONSES_VIEW</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>result<span class="token punctuation">}</span></span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">function</span> <span class="token function">urlEncode</span><span class="token punctuation">(</span><span class="token parameter">param<span class="token punctuation">,</span> key<span class="token punctuation">,</span> encode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>param <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
          <span class="token keyword">var</span> paramStr <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
          <span class="token keyword">var</span> t <span class="token operator">=</span> <span class="token keyword">typeof</span><span class="token punctuation">(</span>param<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>t <span class="token operator">==</span> <span class="token string">&#39;string&#39;</span> <span class="token operator">||</span> t <span class="token operator">==</span> <span class="token string">&#39;number&#39;</span> <span class="token operator">||</span> t <span class="token operator">==</span> <span class="token string">&#39;boolean&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              paramStr <span class="token operator">+=</span> <span class="token punctuation">(</span>paramStr<span class="token operator">?</span><span class="token string">&#39;&amp;&#39;</span><span class="token operator">:</span><span class="token string">&#39;?&#39;</span><span class="token punctuation">)</span> <span class="token operator">+</span> key <span class="token operator">+</span> <span class="token string">&#39;=&#39;</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>encode <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> encode<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>param<span class="token punctuation">)</span> <span class="token operator">:</span> param<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
              <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token keyword">in</span> param<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                  <span class="token keyword">var</span> k <span class="token operator">=</span> key <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> i<span class="token operator">:</span> key <span class="token operator">+</span> <span class="token punctuation">(</span>param <span class="token keyword">instanceof</span> <span class="token class-name">Array</span> <span class="token operator">?</span> <span class="token string">&#39;[&#39;</span> <span class="token operator">+</span> i <span class="token operator">+</span> <span class="token string">&#39;]&#39;</span><span class="token operator">:</span> <span class="token string">&#39;.&#39;</span> <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
                  paramStr <span class="token operator">+=</span> <span class="token function">urlEncode</span><span class="token punctuation">(</span>param<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> k<span class="token punctuation">,</span> encode<span class="token punctuation">)</span><span class="token punctuation">;</span>
              <span class="token punctuation">}</span>
          <span class="token punctuation">}</span>
          <span class="token keyword">return</span> paramStr<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> url <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>result<span class="token punctuation">.</span>config<span class="token punctuation">.</span>baseURL<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>result<span class="token punctuation">.</span>config<span class="token punctuation">.</span>url<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">urlEncode</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>config<span class="token punctuation">.</span>params<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
        <span class="token keyword">let</span> hrefButton <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;div class=&quot;flex&quot;&gt;
        &lt;div class=&quot;responses-href-url flex-item&quot;&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>url<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/div&gt;
        &lt;div&gt;&lt;a href=&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>url<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot; target=&quot;_blank&quot; class=&quot;ant-btn&quot; type=&quot;button&quot; &gt;&lt;span&gt;访问&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
        &lt;/div&gt;</span><span class="token template-punctuation string">\`</span></span>

        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> result<span class="token punctuation">.</span>data <span class="token operator">==</span><span class="token string">&quot;string&quot;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
          <span class="token keyword">return</span> hrefButton<span class="token operator">+</span>result<span class="token punctuation">.</span>data
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">html</span><span class="token operator">:</span>hrefButton<span class="token punctuation">,</span>
          <span class="token literal-property property">code</span><span class="token operator">:</span>result<span class="token punctuation">.</span>data
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> result<span class="token punctuation">.</span>data
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="自定义样式" tabindex="-1"><a class="header-anchor" href="#自定义样式" aria-hidden="true">#</a> 自定义样式</h2><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/** apidoc/style.css */</span>
<span class="token selector">.responses-href-url</span><span class="token punctuation">{</span>
    <span class="token property">border</span><span class="token punctuation">:</span>1px solid #ddd<span class="token punctuation">;</span>
    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
    <span class="token property">padding</span><span class="token punctuation">:</span> 4px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),c=[e];function l(i,u){return s(),a("div",null,c)}const d=n(o,[["render",l],["__file","custom-responses.html.vue"]]);export{d as default};
